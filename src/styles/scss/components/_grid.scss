/*============================================================
* GRID SYSTEM
* ============================================================*/

@function grid-calc($colNumber, $grid__columns) {
  @return percentage(($colNumber / $grid__columns));
}

// COLUMNS
// ============================================================
%grid-cols-common {
  float: left;
  padding-left: $grid__col--gutter;
  padding-right: $grid__col--gutter;
  min-height: 1px;

  @include respond-to($phone){
    padding-left: $grid__col--gutter-phone;
    padding-right: $grid__col--gutter-phone;
  }
}

// DEFAULT COLUMNS FOR DESKTOP & NON SPECIFIED DEVICES
@mixin grid-cols {
  @for $i from 1 through $grid__columns {
    &-#{$i} {
      width: grid-calc($i, $grid__columns);
    }

    &--offset-#{$i} {
      margin-left: grid-calc($i, $grid__columns);
    }
  }

  // OFFSETS
  @include respond-to($desktop) {
    @for $i from 1 through $grid__columns {
      &--desktop-offset-#{$i} {
        margin-left: grid-calc($i, $grid__columns);
      }
    }
  }
}

// RWD COLUMNS FOR COMMON MOBILE
@mixin grid-cols-mobile {
  @include respond-to($mobile) {
    @for $i from 1 through $grid__columns {
      &-#{$i}--mobile {
        width: grid-calc($i, $grid__columns);
      }

      // OFFSETS
      &--mobile-offset-#{$i} {
        margin-left: grid-calc($i, $grid__columns);
      }
    }
  }
}

// RWD COLUMNS FOR TABLET
@mixin grid-cols-tablet {
  @include respond-to($tablet) {
    @for $i from 1 through $grid__columns {
      &-#{$i}--tablet {
        width: grid-calc($i, $grid__columns);
      }

      // OFFSETS
      &--tablet-offset-#{$i} {
        margin-left: grid-calc($i, $grid__columns);
      }
    }
  }
}

// RWD COLUMNS FOR PHONE
@mixin grid-cols-phone {
  @include respond-to($phone) {
    @for $i from 1 through $grid__columns {
      &-#{$i}--phone {
        width: grid-calc($i, $grid__columns);
      }

      // OFFSETS
      &--phone-offset-#{$i} {
        margin-left: grid-calc($i, $grid__columns);
      }
    }
  }
}

// ============================================================
// OFFSETS RESET
// ============================================================
@mixin grid-cols-offset-reset {
  @each $device-type, $media in $devices {
    @include respond-to($media) {
      &--#{$device-type}-offset-0 {
        margin-left: 0;
      }
    }
  }
}

// ============================================================
// GRID HELPERS
// ============================================================

// ADDITIONAL BOTTOM GUTTERS
// ============================================================
// Examples:
// @include grid-add-gutter();
// @include grid-add-gutter($grid__row--gutter*3);
@mixin grid-add-bottom-gutter($gutter-bottom-size: $grid__row--gutter) {

  .grid-add-gutter-bottom {
    margin-bottom: $gutter-bottom-size;
  }

  @each $device-type, $media in $devices {
    @include respond-to($media) {
      .grid-#{$device-type}-add-gutter-bottom {
        margin-bottom: $gutter-bottom-size;
      }
    }
  }
}

// ============================================================
// MOUNTING GRID
// ============================================================
.box {
  max-width: $page__width--maxsize;
  margin-left: auto;
  margin-right: auto;
  padding-left: $grid__col--gutter;
  padding-right: $grid__col--gutter;

  @include respond-to($phone){
    padding-left: $grid__col--gutter-phone;
    padding-right: $grid__col--gutter-phone;
  }

  &--fluid {
    width: 100%;
    max-width: none;
    padding-left: 0;
    padding-right: 0;
  }

  &--flex {
    @include display-flex;

    &--wrap{
      @include display-flex($wrap: wrap);
    }
  }

  @extend %clearfix;
}

// COLUMNS
// ============================================================
[class*="col-"] {
  @extend %grid-cols-common;
}

.col {
  &--no-gutter {
    padding: 0;
  }

  @include grid-cols;
  @include grid-cols-mobile;
  @include grid-cols-tablet;
  @include grid-cols-phone;
  @include grid-cols-offset-reset;
}

// ROWS
// ============================================================
.row {
  margin-left: -$grid__col--gutter;
  margin-right: -$grid__col--gutter;

  @include respond-to($phone){
    margin-left: -$grid__col--gutter-phone;
    margin-right: -$grid__col--gutter-phone;
  }

  &.row--no-gutter {
    margin: 0;
  }

  .row {
    clear: both;
  }

  @extend %clearfix;
}

// HELPERS
// ============================================================
@include grid-add-bottom-gutter;

// TABLE RWD
// ============================================================
.table--rwd-cols {
  width: 100%;

  tr {
    display: block;
  }

  td {
    display: block;
    padding: 0 0 0 $grid__col--gutter*2;
    width: 50%;
    float: left;

    @include respond-to($phone) {
      width: 100%;
      padding: 0 0 $grid__row--gutter 0;
    }

    &:first-child {
      padding-left: 0;
    }
  }
}


// ============================================================
// NATIVE CSS MULTI COLUMNS
// resources: http://caniuse.com/#search=column
// Inpiration: http://people.opera.com/pepelsbey/experiments/multicol/
// ============================================================

// Examples:
// <div class="column-2 column-1--phone column--bordered">...</div>

%masonry-common {
  -webkit-column-gap: $grid__col--gutter*2;
  -moz-column-gap: $grid__col--gutter*2;
  column-gap: $grid__col--gutter*2;
}

@mixin masonry-count {
  @for $i from 1 through $grid__columns {
    &-#{$i} {
      -webkit-column-count: $i;
      -moz-column-count: $i;
      column-count: $i;
    }
  }
}

// RWD COLUMNS FOR PHONE
@mixin masonry-phone {
  @include respond-to($phone) {
    @for $i from 1 through $grid__columns {
      &-#{$i}--phone {
        -webkit-column-count: $i;
        -moz-column-count: $i;
        column-count: $i;
      }
    }
  }
}

// RWD COLUMNS FOR TABLET
@mixin masonry-tablet {
  @include respond-to($tablet) {
    @for $i from 1 through $grid__columns {
      &-#{$i}--tablet {
        -webkit-column-count: $i;
        -moz-column-count: $i;
        column-count: $i;
      }
    }
  }
}

[class*="masonry-"] {
  @extend %masonry-common;

  > article {
    display: inline-block;
    float: none;
    padding: 0;
    width: 100%;

    &.masonry-span {
      -webkit-column-span: all;
      column-span: all;
      display: block;
    }
  }
}

.masonry {
  @include masonry-count;
  @include masonry-phone;
  @include masonry-tablet;

  &--bordered {
    -webkit-column-rule: 1px solid;
    -moz-column-rule: 1px solid;
    column-rule: 1px solid;

    @if variable-exists(border__color--first) {
      -webkit-column-rule-color: $border__color--first;
      -moz-column-rule-color: $border__color--first;
      column-rule-color: $border__color--first;
    }
  }
}
