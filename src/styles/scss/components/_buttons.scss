/* ============================================================
* BUTTONS
* ============================================================*/

// TODO: ADD states, hover, active, focus
// TODO: calc line height, http://www.mathayward.com/modular-css-with-sass-and-bem/

// Define sizes
$btn-sizes: sm, md, lg, xl, xxl;

// Todo: do refactoring
@mixin button-size($size){
  @if $size == sm {
    padding: 2px 8px;
    @include font-size($text__size--sm);

    // Arrows
    &.btn--arrow-l {
      margin-left: calculateRem($text__size--sm*1.5/2);

      &:before {
        border-width: calculateRem($text__size--sm*1.5/2) calculateRem($text__size--sm*1.5/2) calculateRem($text__size--sm*1.5/2) 0;
        margin-left: calculateRem($text__size--sm*1.5/2);
      }
    }
    &.btn--arrow-r {
      margin-right: calculateRem($text__size--sm*1.5/2);

      &:after {
        border-width: calculateRem($text__size--sm*1.5/2) 0 calculateRem($text__size--sm*1.5/2) calculateRem($text__size--sm*1.5/2);
        margin-right: calculateRem($text__size--sm*1.5/2);
      }
    }
  }

  @else if $size == md {
    padding: 6px 18px;
    @include font-size($text__size--md);

    // Arrows
    &.btn--arrow-l {
      margin-left: calculateRem($text__size--md*1.5/2);

      &:before {
        border-width: calculateRem($text__size--md*1.5/2) calculateRem($text__size--md*1.5/2) calculateRem($text__size--md*1.5/2) 0;
        margin-left: calculateRem($text__size--md*1.5/2);
      }
    }
    &.btn--arrow-r {
      margin-right: calculateRem($text__size--md*1.5/2);

      &:after {
        border-width: calculateRem($text__size--md*1.5/2) 0 calculateRem($text__size--md*1.5/2) calculateRem($text__size--md*1.5/2);
        margin-right: calculateRem($text__size--md*1.5/2);
      }
    }
  }

  @else if $size == lg {
    padding: 8px 22px;
    @include font-size($text__size--lg);

    // Arrows
    &.btn--arrow-l {
      margin-left: calculateRem($text__size--lg*1.5/2);

      &:before {
        border-width: calculateRem($text__size--lg*1.5/2) calculateRem($text__size--lg*1.5/2) calculateRem($text__size--lg*1.5/2) 0;
        margin-left: calculateRem($text__size--lg*1.5/2);
      }
    }
    &.btn--arrow-r {
      margin-right: calculateRem($text__size--lg*1.5/2);

      &:after {
        border-width: calculateRem($text__size--lg*1.5/2) 0 calculateRem($text__size--lg*1.5/2) calculateRem($text__size--lg*1.5/2);
        margin-right: calculateRem($text__size--lg*1.5/2);
      }
    }
  }

  @else if $size == xl {
    padding: 8px 22px;
    @include font-size($text__size--xl);

    // Arrows
    &.btn--arrow-l {
      margin-left: calculateRem($text__size--xl*1.5/2);

      &:before {
        border-width: calculateRem($text__size--xl*1.5/2) calculateRem($text__size--xl*1.5/2) calculateRem($text__size--xl*1.5/2) 0;
        margin-left: calculateRem($text__size--xl*1.5/2);
      }
    }
    &.btn--arrow-r {
      margin-right: calculateRem($text__size--xl*1.5/2);

      &:after {
        border-width: calculateRem($text__size--xl*1.5/2) 0 calculateRem($text__size--xl*1.5/2) calculateRem($text__size--xl*1.5/2);
        margin-right: calculateRem($text__size--xl*1.5/2);
      }
    }
  }

  @else if $size == xxl {
    padding: 14px 28px;
    @include font-size($text__size--xxl);

    // Arrows
    &.btn--arrow-l {
      margin-left: calculateRem($text__size--xxl*1.5/2);

      &:before {
        border-width: calculateRem($text__size--xxl*1.5/2) calculateRem($text__size--xxl*1.5/2) calculateRem($text__size--xxl*1.5/2) 0;
        margin-left: calculateRem($text__size--xxl*1.5/2);
      }
    }
    &.btn--arrow-r {
      margin-right: calculateRem($text__size--xxl*1.5/2);

      &:after {
        border-width: calculateRem($text__size--xxl*1.5/2) 0 calculateRem($text__size--xxl*1.5/2) calculateRem($text__size--xxl*1.5/2);
        margin-right: calculateRem($text__size--xxl*1.5/2);
      }
    }
  }
}

// Generates sizes
@mixin generate-btn-sizes() {
  $i: 1;

  @each $n in $btn-sizes {
    &--#{$n} {
      @include button-size(nth($btn-sizes, $i));
    }
    $i: $i + 1;
  }
}

// BUTTON: BASE
// ============================================================

.btn {
  line-height: 1.5;
  text-decoration: none;
  border-radius: $border__radius;
  border: $btn__outline--width solid transparent;
  display: inline-block;
  vertical-align: middle;
  cursor: pointer;

  @include button-size(md);
  @include transition();
  @extend %noselect;
}

// BUTTON: SIZES
.btn {
  @include generate-btn-sizes();
}

// BUTTON: COLORS
// todo: make mixin
// ============================================================
.btn {
  @extend .btn--color-first;

  &--color-first {

    // Base
    background-color: $btn__color--first;
    color: $text__color--second;

    &:hover {
      background-color: lighten($btn__color--first, 7%);

      // Arrows
      &.btn--arrow-l:before {
        border-right-color: lighten($btn__color--first, 7%);
      }

      &.btn--arrow-r:after {
        border-left-color: lighten($btn__color--first, 7%);
      }
    }

    // Outlined
    &.btn--outline {
      border-color: $btn__color--first;
      color: $btn__color--first;

      &:hover {
        background-color: transparent;
        border-color: lighten($btn__color--first, 7%);
        color: lighten($btn__color--first, 7%);
      }
    }

    // Text
    &.btn--txt {
      color: $btn__color--first;

      &:hover {
        background-color: inherit;
        color: lighten($btn__color--first, 7%);
      }
    }

    // Arrow left
    &.btn--arrow-l:before {
      border-right-color: $btn__color--first;
    }

    // Arrow right
    &.btn--arrow-r:after {
      border-left-color: $btn__color--first;
    }
  }

  &--color-second {

    // Base
    background-color: $btn__color--second;
    color: $text__color--second;

    &:hover {
      background-color: lighten($btn__color--second, 7%);

      // Arrows
      &.btn--arrow-l:before {
        border-right-color: lighten($btn__color--second, 7%);
      }

      &.btn--arrow-r:after {
        border-left-color: lighten($btn__color--second, 7%);
      }
    }

    // Outlined
    &.btn--outline {
      border-color: $btn__color--second;
      color: $btn__color--second;

      &:hover{
        background-color: transparent;
        border-color: lighten($btn__color--second, 7%);
        color: lighten($btn__color--second, 7%);
      }
    }

    // Text
    &.btn--txt {
      color: $btn__color--second;

      &:hover {
        background-color: inherit;
        color: lighten($btn__color--second, 7%);
      }
    }

    // Arrow left
    &.btn--arrow-l:before {
      border-right-color: $btn__color--second;
    }

    // Arrow right
    &.btn--arrow-r:after {
      border-left-color: $btn__color--second;
    }
  }

  &--color-third {

    // Base
    background-color: $btn__color--third;
    color: $text__color--second;

    &:hover {
      background-color: lighten($btn__color--third, 7%);

      // Arrows
      &.btn--arrow-l:before {
        border-right-color: lighten($btn__color--third, 7%);
      }

      &.btn--arrow-r:after {
        border-left-color: lighten($btn__color--third, 7%);
      }
    }

    // Outlined
    &.btn--outline {
      border-color: $btn__color--third;
      color: $btn__color--third;

      &:hover {
        background-color: transparent;
        border-color: lighten($btn__color--third, 7%);
        color: lighten($btn__color--third, 7%);
      }
    }

    // Text
    &.btn--txt {
      color: $btn__color--third;

      &:hover {
        background-color: inherit;
        color: lighten($btn__color--third, 7%);
      }
    }

    // Arrow left
    &.btn--arrow-l:before {
      border-right-color: $btn__color--third;
    }

    // Arrow right
    &.btn--arrow-r:after {
      border-left-color: $btn__color--third;
    }
  }
}

// BUTTON: TYPES & VARIANTS
// ============================================================
.btn {

  // Outlined
  &--outline {
    border-radius: $border__radius;
    background-color: transparent;
  }

  // Block
  &--block {
    display: block;
    width: 100%;
  }

  // Txt
  &--txt {
    background-color: transparent;
  }

  // Circle
  &--circle {
    line-height: 1;
    position: relative;
    border-radius: 50%;
    border-width: 5px;
    border-style: solid;

    span {
      @include centerer;
    }

    // todo: make mixin
    &.btn--sm {
      width: 50px;
      height: 50px;
    }

    &.btn--md {
      width: 100px;
      height: 100px;
    }

    &.btn--lg {
      width: 150px;
      height: 150px;
    }

    &.btn--xl {
      width: 200px;
      height: 200px;
    }

    &.btn--xxl {
      width: 250px;
      height: 250px;
    }
  }

  // ARROWS COMMON STYLES
  &--arrow-r,
  &--arrow-l {
    position: relative;
    border-radius: 0;
    border: 0;
    padding-top: 0;
    padding-bottom: 0;
    line-height: 1.5;
  }

  &--arrow-r:after,
  &--arrow-l:before{
    content: '';
    width: 0;
    height: 100%;
    /*height: 50%;*/
    position: absolute;
    top: 0;
    bottom: 0;
    border-style: solid;
    border-color: transparent;
    @include transition();
  }

  // ARROW LEFT
  &--arrow-l:before {
    //border-width: (42px * 1.5)/2 (42px * 1.5)/2 (42px * 1.5)/2 0;
    right: 100%;
  }

  // ARROW RIGHT
  &--arrow-r:after {
    //border-width: (42px * 1.5)/2 0 (42px * 1.5)/2 (42px * 1.5)/2;
    left: 100%;
  }
}


// BUTTON: GROUPED
// ============================================================
.btn-group {
  display: inline-block;

  .btn {
    float: left;

    &:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      padding: 0 10px;
    }
  }
}

// BUTTON: STATES
// ============================================================
.btn, .btn-group {

  &:hover {

  }

  &:active {

  }

  &:focus {

  }
}
