/*============================================================
EXTENDS, PLACEHOLDERS
============================================================*/
%clearfix {
  &:before,
  &:after {
    content: "";
    display: table;
  }

  &:after {
    clear: both;
  }
}

// todo: add border-collapse
%box-sizing {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

%ellipsis {
  text-overflow: ellipsis;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  display: inline-block;
}

%hide-text {
  overflow: hidden;
  text-indent: -9999px;
  display: block;
}

%word-wrap {
  word-wrap: break-word; // Old method, http://caniuse.com/#feat=wordwrap
  overflow-wrap: break-word;
}

%noselect {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/*============================================================
MEDIA QUERIES BREAKPOINT
[i] breakpoints inpired by
http://blog.uxpin.com/4596/responsive-web-design-cheat-sheet/
and Chrome Dev Tools devices

Examples:

@include respond-to(desktop, xl) {
  width: 33.333%;
}
============================================================*/
@mixin respond-to($point, $modifier: null) {

  // GENERIC MOBILE (TABLETS & SMARTPHONES)
  @if $point == mobile {
    @media (max-width: $breakPoint__desktop - 1) {
      @content;
    }
  }

    // SMARTPHONES
  @else if $point == phone {
    @media (max-width: $breakPoint__phone - 1) {
      @content;
    }
  }

    // TABLETS
  @else if $point == tablet {
    @media (min-width: $breakPoint__phone) and (max-width: $breakPoint__desktop - 1) {
      @content;
    }
  }

    // DESKTOPS & LAPTOPS
  @else if $point == desktop {

    @if $modifier == null {
      @media (min-width: $breakPoint__desktop) {
        @content;
      }
    }

      // LARGE SCREENS
    @else if $modifier == xl {
      @media (min-width: $breakPoint__desktop--xl + 1) {
        @content;
      }
    }
  }
}

/*============================================================
BORDERS
============================================================*/
@mixin border($radius: $border__radius, $style: $border__size $border__style $border__color--first) {
  border-radius: $radius;
  border: $style;
}

/*============================================================
GRADIENTS

TODO: make mixin
============================================================*/
@mixin gradient-silver {
  $from: #fafafa;
  $to: #ececec;
  background-color: $from;
  background-image: -moz-linear-gradient($from, $to);
  background-image: -webkit-linear-gradient($from, $to);
  background-image: -o-linear-gradient($from, $to);
  background-image: -ms-linear-gradient($from, $to);
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#{ie-hex-str($from)}', endColorstr='#{ie-hex-str($to)}');";
}

/*============================================================
REM SIZES
============================================================*/
@function calculateRem($size) {
  $remSize: $size / 1px / 10;
  @return $remSize + rem;
}

/* ============================================================
REM FONT SIZE

Examples:
@include font-size(14px, 60px); - general
@include font-size(14px, 1); - for text inputs
============================================================*/

@mixin font-size($size, $line-height: null) {
  font-size: $size; // fallback for old browsers
  font-size: calculateRem($size);

  // Optional unitless line heights http://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
  @if $line-height {
    line-height: ceil($size / $line-height) * ($line-height / $size);
  }

  //margin-bottom: 0px + $line-height;
  //margin-bottom: ($line-height / $doc-font-size)+rem;
}

/* ============================================================
REM LINE HEIGHT

Examples:
@include lineheight-size(18px)
============================================================*/
@mixin line-height($height) {
  line-height: $height; // fallback for old browsers
  line-height: calculateRem($height);
}

/*============================================================
STRIP UNITS

Examples:
strip-units(24px) returns: 24 without "px"
============================================================*/
@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}

/*============================================================
TRANSFORMS
============================================================*/

// Examples:
// @include transform-free(rotate(180deg) scale(1.4));
// @include transform-free(scale(1.4));
@mixin transform-free($args...) {
  -webkit-transform: $args;
  transform: $args;
}

@mixin rotate($val) {
  -webkit-transform: rotate($val+deg);
  transform: rotate($val+deg);
}

/*============================================================
TRANSITIONS
============================================================*/

// Examples:
// @include transition-free(background-color .4s ease, width 1s ease-out);
// @include transition-free(0.5s ease);
@mixin transition-free($args...) {
  -webkit-transition: $args;
  transition: $args;
}

// Examples:
// @include transition( (height, padding, top));
// @include transition( (height, padding, top), .25s, ease, .5s );
// @include transition;
@mixin transition($list: all, $duration: $trans__base--duration, $timing: $trans__base--timing, $delay: $trans__base--delay) {
  $properties: ();

  @each $property in $list {
    //$transition: unquote($property $duration $timing $delay); //Old sass 3.4.9
    $transition: $property $duration $timing $delay;
    $properties: append($properties, $transition, comma);
  }

  @include transition-free(#{$properties});
}

/*============================================================
FLEX BOX
============================================================*/
@mixin flexWrap {
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;

  -webkit-flex-flow: row wrap;
  -webkit-flex-direction: row;

  -ms-flex-direction: row;
  -ms-flex-flow: row wrap;

  flex-flow: row wrap;
  flex-direction: row;
}

@mixin flexItem {
  -webkit-flex: 1 auto;
  -ms-flex: 1 auto;
  flex: 1 auto;
}

/*============================================================
POSITIONING
============================================================*/

// Examples:
// @include centerer();
// @include centerer(x);
// @include centerer(y);
@mixin centerer($axis: auto) {
  @if $axis == x {
    left: 50%;
    -moz-transform: translateX(-50%);
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
  } @else if $axis == y {
    top: 50%;
    -moz-transform: translateY(-50%);
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
  } @else {
    top: 50%;
    left: 50%;
    -moz-transform: translate(-50%, -50%);
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }

  position: absolute;
}

@mixin coverer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}