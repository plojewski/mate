/*============================================================
* GRID SYSTEM
* ============================================================*/
$device: (phone: $phone, tablet: $tablet, mobile: $mobile, desktop: $desktop, desktop--xl: $desktop--xl);

@function grid-calc($colNumber, $grid__columns) {
  @return percentage(($colNumber / $grid__columns));
}

// COLUMNS
// ============================================================

%grid-cols-common {
  float: left;
  padding-left: $grid__col--gutter;
  padding-right: $grid__col--gutter;
}

// DEFAULT COLUMNS FOR DESKTOP & NON SPECIFIED DEVICES
@mixin grid-cols {
  @for $i from 1 through $grid__columns {
    &-#{$i} {
      width: grid-calc($i, $grid__columns);
    }

    &--offset-#{$i} {
      margin-left: grid-calc($i, $grid__columns);
    }
  }

  // OFFSETS
  @include respond-to($desktop) {
    @for $i from 1 through $grid__columns {
      &--desktop-offset-#{$i} {
        margin-left: grid-calc($i, $grid__columns);
      }
    }
  }
}

// RWD COLUMNS FOR COMMON MOBILE
@mixin grid-cols-mobile {
  @include respond-to($mobile) {
    @for $i from 1 through $grid__columns {
      &-#{$i}--mobile {
        width: grid-calc($i, $grid__columns);
      }

      // OFFSETS
      &--mobile-offset-#{$i} {
        margin-left: grid-calc($i, $grid__columns);
      }
    }
  }
}

// RWD COLUMNS FOR TABLET
@mixin grid-cols-tablet {
  @include respond-to($tablet) {
    @for $i from 1 through $grid__columns {
      &-#{$i}--tablet {
        width: grid-calc($i, $grid__columns);
      }

      // OFFSETS
      &--tablet-offset-#{$i} {
        margin-left: grid-calc($i, $grid__columns);
      }
    }
  }
}

// RWD COLUMNS FOR PHONE
@mixin grid-cols-phone {
  @include respond-to($phone) {
    @for $i from 1 through $grid__columns {
      &-#{$i}--phone {
        width: grid-calc($i, $grid__columns);
      }

      // OFFSETS
      &--phone-offset-#{$i} {
        margin-left: grid-calc($i, $grid__columns);
      }
    }
  }
}

// OFFSETS RESET
// ============================================================
@mixin grid-cols-offset-reset {
  @each $device-type, $media in $device {
    &--#{$device-type}-offset-0 {
      margin-left: 0;
    }
  }
}

// ADDITIONAL GUTTERS
// ============================================================
@mixin grid-cols-add-gutter {
  @each $device-type, $media in $device {
    @include respond-to($media) {
      &--#{$device-type}-add-gutter-bottom {
        margin-bottom: $grid__row--gutter;
      }
    }
  }
}

// GRID HELPERS
// ============================================================
%row-add-gutter {
  margin-bottom: $grid__row--gutter;
}

%row-dbl-gutter {
  margin-bottom: $grid__row--gutter*2;

  @include respond-to($phone) {
    margin-bottom: $grid__row--gutter;
  }
}

%row--no-gutter {
  margin: 0;
}

// MOUNTING GRID
// ============================================================
.box {
  max-width: $page__width--maxsize;
  margin-left: auto;
  margin-right: auto;
  padding-left: $grid__col--gutter;
  padding-right: $grid__col--gutter;

  &--fluid {
    width: 100%;
    max-width: none;
    padding-left: 0;
    padding-right: 0;
  }

  &--flex {
    @include flex-wrap;
  }

  &--add-gutter {
    margin-bottom: $grid__row--gutter;
  }

  @extend %clearfix;
}

// COLUMNS
// ------------------------------------------------------------
[class*="col-"] {
  @extend %grid-cols-common;
}

.col {
  &--no-gutter {
    padding: 0;
  }

  @include grid-cols;
  @include grid-cols-mobile;
  @include grid-cols-tablet;
  @include grid-cols-phone;
  @include grid-cols-offset-reset;
  @include grid-cols-add-gutter;
}

// ROWS
// ------------------------------------------------------------
.row {
  margin-left: -$grid__col--gutter;
  margin-right: -$grid__col--gutter;

  &--add-gutter {
    @extend %row-add-gutter;
  }

  &--dbl-gutter {
    @extend %row-dbl-gutter;
  }

  &.row--no-gutter {
    @extend %row--no-gutter;
  }

  .row {
    clear: both;
  }

  @extend %clearfix;
}

// TABLE RWD
// ------------------------------------------------------------
.table--rwd-cols {
  width: 100%;

  tr {
    display: block;
  }

  td {
    display: block;
    padding: 0 0 0 $grid__col--gutter*2;
    width: 50%;
    float: left;

    @include respond-to($phone) {
      width: 100%;
      padding: 0 0 $grid__row--gutter 0;
    }

    &:first-child {
      padding-left: 0;
    }
  }
}