// ============================================================
// MATE TOOLBOX
// ============================================================

// ============================================================
// EXTENDS, PLACEHOLDERS
// ============================================================
%box-sizing--border {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

%box-sizing--content {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

%clearfix {
  &:before,
  &:after {
    content: '';
    display: block;
    clear: both;
  }
}

%ellipsis {
  text-overflow: ellipsis;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  display: inline-block;
}

%hide-text {
  overflow: hidden;
  text-indent: -9999px;
  display: block;
}

%word-wrap {
  word-wrap: break-word; // Old method, http://caniuse.com/#feat=wordwrap
  overflow-wrap: break-word;
}

%noselect {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

// ============================================================
// FUNCTIONS
// ============================================================
@function calculateRem($size) {
  @return ($size / 1px / 10) * 1rem;
}

@function strip-units($value) {
  @return $value / ($value * 0 + 1);
}

// ============================================================
// MIXINS
// ============================================================

// ============================================================
// MEDIA QUERIES BREAKPOINT
// [i] breakpoints inpired by
// http://blog.uxpin.com/4596/responsive-web-design-cheat-sheet/
// and Chrome Dev Tools devices
//
// Examples:
//
// @include respond-to(desktop, xl) {
//  width: 33.333%;
// }
// ============================================================
@mixin respond-to($point, $modifier: null) {

  // GENERIC MOBILE (TABLETS & SMARTPHONES)
  @if $point == mobile {
    @media screen and (max-width: $breakPoint__desktop - 1) {
      @content;
    }
  }

    // SMARTPHONES
  @else if $point == phone {
    @media screen and (max-width: $breakPoint__phone - 1) {
      @content;
    }
  }

    // TABLETS
  @else if $point == tablet {
    @media screen and (max-width: $breakPoint__desktop - 1) and (min-width: $breakPoint__phone) {
      @content;
    }
  }

    // DESKTOPS & LAPTOPS
  @else if $point == desktop {

    @if $modifier == null {
      @media (min-width: $breakPoint__desktop) {
        @content;
      }
    }

      // LARGE SCREENS
    @else if $modifier == xl {
      @media (min-width: $breakPoint__desktop--xl + 1) {
        @content;
      }
    }
  }
}

// ============================================================
// GRADIENTS
// ============================================================
@mixin gradient($gradient-color-from, $gradient-color-to) {
  background-image: linear-gradient($gradient-color-from, $gradient-color-to);
}

// ============================================================
// REM FONT SIZE
// Examples:
// @include font-size(14px, 60px); - general
// @include font-size($text__size--md, $text__line-height--md); - general
// @include font-size(14px, 1); - for text inputs
// ============================================================
@mixin font-size($size, $line-height: null) {
  font-size: calculateRem($size);

  // Optional unitless line height http://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
  @if $line-height {
    line-height: ceil($size / $line-height) * ($line-height / $size);
  }
}

// ============================================================
// TRANSFORMS
// ============================================================

// Examples:
// @include transform-free(rotate(180deg) scale(1.4));
// @include transform-free(scale(1.4));
@mixin transform-free($args...) {
  -webkit-transform: $args;
  transform: $args;
}

@mixin rotate($val) {
  -webkit-transform: rotate($val+deg);
  transform: rotate($val+deg);
}

// ============================================================
// TRANSITIONS
// ============================================================

// Examples:
// @include transition-free(background-color .4s ease, width 1s ease-out);
// @include transition-free(0.5s ease);
@mixin transition-free($args...) {
  transition: $args;
}

// Examples:
// @include transition( (height, padding, top));
// @include transition( (height, padding, top), .25s, ease, .5s );
// @include transition;
@mixin transition($list: all, $duration: $trans__base--duration, $timing: $trans__base--timing, $delay: $trans__base--delay) {
  $properties: ();

  @each $property in $list {
    $transition: $property $duration $timing $delay;
    $properties: append($properties, $transition, comma);
  }

  @include transition-free(#{$properties});
}

// ============================================================
// ANIMATIONS
// ============================================================

// Examples:
// @include animation(animName 1s ease);
@mixin animation($args...) {
  animation: $args;
  -webkit-animation: $args;
}

// ============================================================
// FLEX BOX
// resources:
// https://scotch.io/demos/visual-guide-to-css3-flexbox-flexbox-playground
// https://css-tricks.com/snippets/css/a-guide-to-flexbox/?utm_source=dlvr.it&utm_medium=facebook
// todo: make mixin with params
// ============================================================
@mixin flex-wrap {
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;

  // flex-direction
  -ms-flex-direction: row;
  -webkit-flex-direction: row;
  flex-direction: row;

  // flex-wrap
  -ms-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;

  // justify-content
  -ms-justify-content: flex-start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;

  // align-items
  -ms-align-items: stretch;
  -webkit-align-items: stretch;
  align-items: stretch;

  // align-content
  -ms-align-content: flex-start;
  -webkit-align-content: flex-start;
  align-content: flex-start;
}

@mixin flex-item {
  -ms-order: 0;
  -webkit-order: 0;
  order: 0;

  -ms-flex-grow: 0;
  -webkit-flex-grow: 0;
  flex-grow: 0;

  -ms-flex-shrink: 1;
  -webkit-flex-shrink: 1;
  flex-shrink: 1;

  -ms-flex-basis: auto;
  -webkit-flex-basis: auto;
  flex-basis: auto;

  -ms-align-self: auto;
  -webkit-align-self: auto;
  align-self: auto;
}

// ============================================================
// NATIVE CSS MULTI COLUMNS
// resources: http://caniuse.com/#search=column
// todo: add to manual
// ============================================================

// Examples:
// <div class="column-2 column--bordered">...</div>

%column-common {
  -webkit-column-gap: $grid__col--gutter*2;
  -moz-column-gap: $grid__col--gutter*2;
  column-gap: $grid__col--gutter*2;
}

@mixin column-count {
  @for $i from 1 through $grid__columns {
    &-#{$i} {
      -webkit-column-count: $i;
      -moz-column-count: $i;
      column-count: $i;
    }
  }
}

// RWD COLUMNS FOR PHONE
@mixin column-phone {
  @include respond-to(phone) {
    @for $i from 1 through $grid__columns {
      &-#{$i}--phone {
        -webkit-column-count: $i;
        -moz-column-count: $i;
        column-count: $i;
      }
    }
  }
}

// RWD COLUMNS FOR TABLET
@mixin column-tablet {
  @include respond-to(tablet) {
    @for $i from 1 through $grid__columns {
      &-#{$i}--tablet {
        -webkit-column-count: $i;
        -moz-column-count: $i;
        column-count: $i;
      }
    }
  }
}

[class*="column-"] {
  @extend %column-common;
}

.column {
  @include column-count;
  @include column-phone;
  @include column-tablet;

  &--bordered {
    -webkit-column-rule: 1px solid $border__color--first;
    -moz-column-rule: 1px solid $border__color--first;
    column-rule: 1px solid $border__color--first;
  }
}

// ============================================================
// POSITIONING
// ============================================================

// Examples:
// @include centerer();
// @include centerer(x);
// @include centerer(y);
@mixin centerer($axis: auto) {

  @if $axis == x {
    @include transform-free(translateX(-50%));
    left: 50%;

  } @else if $axis == y {
    @include transform-free(translateY(-50%));
    top: 50%;

  } @else {
    @include transform-free(translate(-50%, -50%));
    top: 50%;
    left: 50%;
  }

  position: absolute;
}

@mixin coverer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

// ============================================================
// FILTERS
// [i] Filters preview: http://html5-demos.appspot.com/static/css/filters/index.html
// ============================================================
@mixin filter($args...) {
  -webkit-filter: $args;
  filter: $args;
}

// ============================================================
// PERSPECTIVE
// ============================================================
@mixin perspective($size) {
  -webkit-perspective: $size;
  perspective: $size;
}

// ============================================================
// Animations
// [i] Useful for focusing user eyes on changed element
// ============================================================

// Example:
// add class .mate-blink to an element by JS
// document.getElementById(yourElement).classList.add('mate-blink');

.mate-blink {
  @include animation(mate-blink 2s ease);
}

@keyframes mate-blink {
  0% {
    background-color: $color__message--warning;
  }

  100% {
    background-color: transparent;
  }
}