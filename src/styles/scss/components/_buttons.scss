/* ============================================================
* BUTTONS
* ============================================================*/

// TODO: ADD states, hover, active, focus
// TODO: calc line height, http://www.mathayward.com/modular-css-with-sass-and-bem/

// Define sizes
$btn-sizes: sm, md, lg, xl, xxl;

@mixin button-size($size){
  @if $size == sm {
    padding: 2px 10px;
    @include font-size($text__size--sm);
  }

  @else if $size == md {
    padding: 8px 20px;
    @include font-size($text__size--md);
  }

  @else if $size == lg {
    padding: 10px 25px;
    @include font-size($text__size--lg);
  }

  @else if $size == xl {
    padding: 10px 25px;
    @include font-size($text__size--xl);
  }

  @else if $size == xxl {
    padding: 15px 30px;
    @include font-size($text__size--xxl);
  }
}

// Generates sizes
@mixin generate-btn-sizes() {
  $i: 1;

  @each $n in $btn-sizes {
    &--#{$n} {
      @include button-size(nth($btn-sizes, $i));
    }
    $i: $i + 1;
  }
}

// BUTTON: BASE
// ============================================================
.btn {
  line-height: 1.5;
  text-decoration: none;
  border-radius: $border__radius;
  border: 0;
  display: inline-block;
  vertical-align: middle;
  cursor: pointer;

  @include button-size(md);
  @include transition();
  @extend %noselect;
}

// BUTTON: SIZES
.btn {
  @include generate-btn-sizes();
}

// BUTTON: COLORS
// ============================================================
.btn {
  @extend .btn--color-first;

  &--color-first {
    background-color: $btn__color--first;
    color: $text__color--second;

    &:hover {
      background-color: lighten($btn__color--first, 5%);
    }
  }

  &--color-second {
    background-color: $btn__color--second;
    color: $text__color--second;

    &:hover {
      background-color: lighten($btn__color--second, 5%);
    }
  }

  &--color-third {
    background-color: $btn__color--third;
    color: $text__color--second;

    &:hover {
      background-color: lighten($btn__color--third, 5%);
    }
  }
}

// BUTTON: TYPES & VARIANTS
// ============================================================
.btn {

  // Outlined
  &--outline {
    border: 2px solid $btn__color--second;
    border-radius: $border__radius;
  }

  &--block {
    display: block;
    width: 100%;
  }

  &--txt {
    padding: 0;

    &:hover {
      background-color: rgba(255, 255, 255, 0.2);
      color: inherit;
    }
  }

  // Circle
  &--circle {
    line-height: 1;
    position: relative;
    border-radius: 50%;
    border-width: 5px;
    border-style: solid;

    span {
      @include centerer;
    }

    &.btn--xxl {
      width: 250px;
      height: 250px;
    }
  }

  // ARROWS, LEFT & RIGHT
  &--arrow-r,
  &--arrow-l {
    position: relative;

    &:after,
    &:before {
      content: '';
      width: 0;
      height: 0;
      position: absolute;
      top: 50%;
      margin-top: -5px;
      border-style: solid;
    }
  }

  // ARROW RIGHT
  &--arrow-r {
    padding-right: 50px;

    &:after {
      border-width: 5px 0 5px 10px;
      border-color: transparent transparent transparent white;
      right: 20px;
    }
  }

  // ARROW LEFT
  &--arrow-l {
    padding-left: 50px;

    &:before {
      border-width: 5px 10px 0 5px;
      border-color: transparent white transparent transparent;
      left: 20px;
    }
  }

  // ICONS POSITION FIX
  .icon {
    top: -3px;
    position: relative;
  }
}


// BUTTON: GROUPED
// ============================================================
.btn-group {
  display: inline-block;

  .btn {
    float: left;

    &:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      padding: 0 10px;
    }
  }
}

// BUTTON: STATES
// ============================================================
.btn, .btn-group {

  &:hover {

  }

  &:active {

  }

  &:focus {

  }
}
