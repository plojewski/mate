// ============================================================
// BUTTONS
// ============================================================

// Return button text size
// ------------------------------------------------------------
@function getTextSize($value) {
  @if $value == "xs" {
    @return $text__size--xs;
  }

  @if $value == "sm" {
    @return $text__size--sm;
  }

  @if $value == "md" {
    @return $text__size--md;
  }

  @if $value == "lg" {
    @return $text__size--lg;
  }

  @if $value == "xl" {
    @return $text__size--xl;
  }

  @if $value == "xxl" {
    @return $text__size--xxl;
  }
}

// Common arrow sets
// ------------------------------------------------------------
@mixin btn-common-arrows($arrow-border-size) {

  &.btn--arrow-l {
    margin-left: $arrow-border-size;

    &:before {
      border-width: $arrow-border-size $arrow-border-size $arrow-border-size 0;
      margin-left: $arrow-border-size;
    }
  }

  &.btn--arrow-r {
    margin-right: $arrow-border-size;

    &:after {
      border-width: $arrow-border-size 0 $arrow-border-size $arrow-border-size;
      margin-right: $arrow-border-size;
    }
  }
}

// Generate sizes
// ------------------------------------------------------------
@mixin generate-btn-sizes-styles($type, $btn-padding-vertical, $btn-padding-horizontal) {
  font-size: getTextSize($type);
  padding: $btn-padding-vertical $btn-padding-horizontal;

  @include respond-to($phone) {
    padding: ($btn-padding-vertical*0.67) $btn-padding-horizontal;
  }
}

@mixin generate-btn-sizes($default: md) {

  @each $n in $btn__sizes {
    $type: nth($n, 1);
    $btn-padding-vertical: nth($n, 2);
    $btn-padding-horizontal: nth($n, 3);
    $arrow-border-size: (getTextSize($type) + ($btn-padding-vertical*2 + ($btn__border--width*2))) /2;

    // Generate default size
    @if $default == $type {
      @include generate-btn-sizes-styles($type, $btn-padding-vertical, $btn-padding-horizontal);
      @include btn-common-arrows($arrow-border-size);
    }

    // Generates all button sizes
    &--#{$type} {
      @include generate-btn-sizes-styles($type, $btn-padding-vertical, $btn-padding-horizontal);
      @include btn-common-arrows($arrow-border-size);
    }
  }
}

@mixin generate-btn-fixed-sizes() {
  @each $size in $btn__fixed-sizes {
    &--fixed-#{$size} {
      width: #{$size}px;
    }
  }
}

// BUTTON: BASE
// ============================================================
.btn {
  line-height: 1;
  border-radius: $border__radius;

  display: inline-block;          // todo: to remove in the future
  -webkit-display: inline-flex;   // todo: to remove in the future
  -webkit-align-items: center;    // todo: to remove in the future

  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  vertical-align: middle;
  text-decoration: none;
  border: $btn__border--width solid transparent;
  cursor: pointer;
  @include transition();
  @extend %noselect;

  // Sizes
  @include generate-btn-sizes();
  @include generate-btn-fixed-sizes();

  // States
  &[disabled]{
    opacity: 0.3;
  }
}

// BUTTON: COLORS
// todo: make as mixin
// ============================================================
.btn {
  @extend .btn--color-first;

  &--color-first {

    // Base
    background-color: $btn__color--first;
    color: $btn__color--first-txt;

    &:hover {
      background-color: darken($btn__color--first, 7%);

      // Arrows
      &.btn--arrow-l:before {
        border-right-color: darken($btn__color--first, 7%);
      }

      &.btn--arrow-r:after {
        border-left-color: darken($btn__color--first, 7%);
      }
    }

    // Outlined
    &.btn--outline {
      color: $btn__color--first;
      border-color: $btn__color--first;

      &:hover {
        background-color: $btn__color--first;
        color: $btn__color--first-txt;
      }
    }

    // Text
    &.btn--txt {
      color: $btn__color--first;

      &:hover {
        background-color: inherit;
        color: darken($btn__color--first, 7%);
      }
    }

    // Arrow left
    &.btn--arrow-l:before {
      border-right-color: $btn__color--first;
    }

    // Arrow right
    &.btn--arrow-r:after {
      border-left-color: $btn__color--first;
    }
  }

  &--color-second {

    // Base
    background-color: $btn__color--second;
    color: $btn__color--second-txt;

    &:hover {
      background-color: darken($btn__color--second, 7%);

      // Arrows
      &.btn--arrow-l:before {
        border-right-color: darken($btn__color--second, 7%);
      }

      &.btn--arrow-r:after {
        border-left-color: darken($btn__color--second, 7%);
      }
    }

    // Outlined
    &.btn--outline {
      color: $btn__color--second;
      border-color: $btn__color--second;

      &:hover {
        background-color: $btn__color--second;
        color: $btn__color--second-txt;
      }
    }

    // Text
    &.btn--txt {
      color: $btn__color--second;

      &:hover {
        background-color: inherit;
        color: darken($btn__color--second, 7%);
      }
    }

    // Arrow left
    &.btn--arrow-l:before {
      border-right-color: $btn__color--second;
    }

    // Arrow right
    &.btn--arrow-r:after {
      border-left-color: $btn__color--second;
    }
  }

  &--color-third {

    // Base
    background-color: $btn__color--third;
    color: $btn__color--third-txt;

    &:hover {
      background-color: darken($btn__color--third, 10%);

      // Arrows
      &.btn--arrow-l:before {
        border-right-color: darken($btn__color--third, 7%);
      }

      &.btn--arrow-r:after {
        border-left-color: darken($btn__color--third, 7%);
      }
    }

    // Outlined
    &.btn--outline {
      color: $btn__color--third;
      border-color: $btn__color--third;

      &:hover {
        background-color: $btn__color--third;
        color: $btn__color--third-txt;
      }
    }

    // Text
    &.btn--txt {
      color: $btn__color--third;

      &:hover {
        background-color: inherit;
        color: darken($btn__color--third, 7%);
      }
    }

    // Arrow left
    &.btn--arrow-l:before {
      border-right-color: $btn__color--third;
    }

    // Arrow right
    &.btn--arrow-r:after {
      border-left-color: $btn__color--third;
    }
  }
}

// BUTTON: TYPES & VARIANTS
// ============================================================
.btn {

  // Outlined
  &--outline {
    border-radius: $border__radius;
    background-color: transparent;
    border: $btn__border--width solid;
    //@include generate-btn-outline();
  }

  // Block
  &--block {
    display: block;
    width: 100%;
  }

  // Txt
  &--txt {
    background-color: transparent;
  }

  // Circle
  &--circle {
    position: relative;
    border-radius: 50%;
    padding: 0;

    span {
      @include centerer;
      line-height: 1;
    }

    // todo: make as mixin
    &.btn--xs {
      width: 32px;
      height: 32px;
    }

    &.btn--sm {
      width: 50px;
      height: 50px;
    }

    &.btn--md {
      width: 100px;
      height: 100px;
    }

    &.btn--lg {
      width: 150px;
      height: 150px;
    }

    &.btn--xl {
      width: 200px;
      height: 200px;
    }

    &.btn--xxl {
      width: 250px;
      height: 250px;
    }
  }

  // ARROWS COMMON STYLES
  &--arrow-r,
  &--arrow-l {
    position: relative;
    border-radius: 0;
    border-right: 0;
    border-left: 0;
  }

  &--arrow-r:after,
  &--arrow-l:before {
    content: '';
    width: 0;
    //height: 50%; // tip: use only when height is calculated by "line-height"
    position: absolute;
    top: -$btn__border--width;
    bottom: 0;
    border-style: solid;
    border-color: transparent;
    @include transition();
  }

  // ARROW LEFT
  &--arrow-l:before {
    right: 100%;
  }

  // ARROW RIGHT
  &--arrow-r:after {
    left: 100%;
  }

  // ICON INSIDE BUTTON
  > span:not(:last-child) {
    margin-right: 5px;
  }
}

// BUTTON: GROUPED
// todo: gropued buttons
// ============================================================
.btn-group {
  display: inline-block;

  .btn {
    float: left;

    &:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      padding: 0 10px;
    }
  }
}
