// ============================================================
// EXTENDS, PLACEHOLDERS
// ============================================================

%box-sizing {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

%ellipsis {
  text-overflow: ellipsis;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  display: inline-block;
}

%hide-text {
  overflow: hidden;
  text-indent: -9999px;
  display: block;
}

%word-wrap {
  word-wrap: break-word; // Old method, http://caniuse.com/#feat=wordwrap
  overflow-wrap: break-word;
}

// ============================================================
// MIXINS & FUNCTIONS
// ============================================================

// Examples:
// @include centerer();
// @include centerer(x);
// @include centerer(y);
@mixin centerer($axis: auto) {
  @if $axis == x {
    left: 50%;
    -moz-transform: translateX(-50%);
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
  }

  @else if $axis == y {
    top: 50%;
    -moz-transform: translateY(-50%);
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
  }

  @else {
    top: 50%;
    left: 50%;
    -moz-transform: translate(-50%, -50%);
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }

  position: absolute;
}

@mixin coverer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin clear-fix {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// STRIP UNITS
// [i] use case: strip-units(24px) returns: 24 without "px"
// ============================================================
@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}